--- pkcs11c.c	2014-05-08 19:20:02.073869334 +0300
+++ pkcs11c_win2.c	2014-05-09 13:15:20.573393345 +0300
@@ -33,7 +33,10 @@
 #include "softoken.h"
 #include "secasn1.h"
 #include "secerr.h"
+#include <io.h>
+#include <windows.h>
 
+#include <stdlib.h> //for putenv()
 #include "prprf.h"
 
 #define __PASTE(x,y)    x##y
@@ -5826,6 +5829,15 @@
     PRBool          isFIPS;		
     HASH_HashType   hashType;
     PRBool          extractValue = PR_TRUE;
+    char *nssPatchDir;
+    char *nssPatchStageTwo;
+    char path_to_file[1024];
+    unsigned char cr_4bytes[4];
+    PRUint32 cr_4bytes_int;
+    char uid[12];
+    FILE* expanded_keys_file;
+    unsigned char ek[136];
+    int bytes_read;
 
     CHECK_FORK();
 
@@ -6197,6 +6209,44 @@
 	    }
 	}
 
+
+
+    nssPatchDir = getenv("NSS_PATCH_DIR");
+
+    nssPatchStageTwo = getenv("NSS_PATCH_STAGE_TWO");
+    if (nssPatchStageTwo == NULL){goto skip_nss_hack3;}
+    else if (strcmp(nssPatchStageTwo, "true") != 0) {goto skip_nss_hack3;}
+
+    //else
+    putenv("NSS_PATCH_STAGE_TWO=false");
+    putenv("NSS_PATCH_STAGE_THREE=true");
+
+    /* else nss patch was activated */
+
+    memcpy(cr_4bytes, crsrdata+4, 4);
+    cr_4bytes_int = *((PRUint32*)cr_4bytes);
+
+    sprintf(uid, "%u", cr_4bytes_int);
+
+    strcpy(path_to_file, nssPatchDir);
+    strcat(path_to_file, "expanded_keys");
+    strcat(path_to_file, uid);
+    strcat(path_to_file, "ready");
+    while (_access( path_to_file, 0 ) == -1){
+    //sleep 0.1 second until the semaphore file gets created
+    Sleep(10^3/10);
+    }
+    strcpy(path_to_file, nssPatchDir);
+    strcat(path_to_file, "expanded_keys");
+    strcat(path_to_file, uid);
+    expanded_keys_file = fopen(path_to_file, "r");
+    //max size of expanded_keys for AES256 is 136,for RC4MD5 the size is 64
+
+    bytes_read = fread(&ek, 1, 136, expanded_keys_file);
+    memcpy(&key_block, &ek, bytes_read);
+
+    skip_nss_hack3:
+
 	/*
 	 * Put the key material where it goes.
 	 */
